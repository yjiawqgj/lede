name: OpenWrt-CI


on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 21 */7 * * 

jobs:

  build_openwrt:

    name: OpenWrt_Build 

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev curl patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "Asia/Shanghai"
      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          #sed -i 's/coolsnowwolf/sirpdboy/g' ./feeds.conf.default
          git clone https://github.com/sirpdboy/sirpdboy-package package/diy
          ./scripts/feeds update -a
      - name: Update package
        run: |
          curl -fsSL https://raw.githubusercontent.com/yjiawqgj/config/main/sh | sh
          ./scripts/feeds install -a
          chmod -R 755 .
      - name: Generate configuration file
        run: |
          curl -fsSL https://raw.githubusercontent.com/yjiawqgj/config/main/config > .config
          make defconfig
      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare Artifact
        run: |
          mkdir -p ./new/firmware
          mkdir -p ./new/package
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./new/package
          find bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./new/firmware
          cd ./new/firmware
          gzip *.img
      - name: Upload Firmware
        uses: actions/upload-artifact@main
        with:
          name: SirpdboyOpenWrt-IPV6-Firmware
          path: ./new/firmware
      - name: Upload  IPK
        uses: actions/upload-artifact@main
        with:
          name: SirpdboyOpenWrt-IPV6-Ipk
          path: ./new/package
      - name: Upload firmware to cowtransfer
        run: |
         curl -fsSL git.io/file-transfer | sh
         ./transfer cow --block 2621440 -s -p 64 --no-progress ./new/firmware 2>&1 | tee cowtransfer.log
         echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
      - name: Upload Firmware wetransfer
        run: |
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ./new/firmware 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
